{"version":3,"sources":["webpack:///./src/components/Presentations/BlogListPagenation.tsx","webpack:///./src/components/Presentations/BlogListLink.tsx","webpack:///./src/templates/blog-category.tsx"],"names":["BlogListPagenation","styled","className","category","current","isFirst","isLast","branches","to","rel","BlogListLink","edges","map","node","fields","slug","key","id","fluid","frontmatter","image","childImageSharp","title","query","location","data","pageContext","description","pagePath","pathname","allMarkdownRemark","PagesStyle","BreakPoint","largeMobile"],"mappings":"4FAAA,mFAoEaA,EA7BWC,aAvB6B,SAAC,GAAmE,IAAjEC,EAAiE,EAAjEA,UAAWC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,OACvFC,EAAWJ,EAAW,aAAaA,EAAhB,kBAEzB,OACE,wBAAID,UAAWA,IACXG,GACA,wBAAIH,UAAU,QACZ,kBAAC,OAAD,CAAMM,GAAgB,IAAZJ,EAAgBG,EAAhB,GAA8BA,GAAWH,EAAU,GAAnD,IAAyDK,IAAI,OAAOP,UAAU,aAAxF,SAKFI,GACA,wBAAIJ,UAAU,QACZ,kBAAC,OAAD,CAAMM,GAAE,GAAKD,GAAWH,EAAU,GAA1B,IAAgCK,IAAI,OAAOP,UAAU,aAA7D,YASW,0FAAGD,CAAH,qR,kCCvCrB,wGA6EaS,EArCWT,aAzBuB,SAAC,GAAsC,IAApCC,EAAoC,EAApCA,UAAWS,EAAyB,EAAzBA,MAsB3D,OAAO,yBAAKT,UAAWA,GApBdS,EAAMC,KAAI,0BAAGC,EAAH,EAAGA,KAAH,OACf,kBAAC,OAAD,CAAMX,UAAU,YAAYM,IAAIK,SAAA,UAAAA,EAAMC,cAAN,eAAcC,OAAQ,GAAIC,IAAKH,aAAF,EAAEA,EAAMI,IACnE,wBAAIf,UAAU,gBACZ,wBAAIA,UAAU,sBACZ,kBAAC,IAAD,CACEA,UAAU,aAMVgB,MAAOL,SAAF,UAAEA,EAAMM,mBAAR,iBAAE,EAAmBC,aAArB,iBAAE,EAA0BC,uBAA5B,aAAE,EAA2CH,SAGtD,wBAAIhB,UAAU,cAAcW,SAA5B,UAA4BA,EAAMM,mBAAlC,aAA4B,EAAmBG,gBASpC,mFAAGrB,CAAH,2X,iRCdd,IAAMsB,EAAQ,aAqCNtB,uBAXgC,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWsB,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,YAA9B,OAC7C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKJ,MAAM,sBAAsBK,YAAY,8BAA8BC,SAAUJ,EAASK,WAC9F,yBAAK3B,UAAWA,GACd,wBAAIA,UAAU,aAAd,YAAuCwB,EAAYvB,SAAnD,aAAwEuB,EAAYtB,SACpF,kBAAC,IAAD,CAAcO,MAAOc,EAAKK,kBAAkBnB,QAC5C,kBAAC,IAAD,CAAoBR,SAAUuB,EAAYvB,SAAUC,QAASsB,EAAYtB,QAASC,QAASqB,EAAYrB,QAASC,OAAQoB,EAAYpB,cAK1I,oEAAeL,CAAf,4EACI8B,IAMEC,IAAWC,YAPjB","file":"component---src-templates-blog-category-tsx-c465e8476ded4f929a75.js","sourcesContent":["/*\n  Blog List Pagenation.\n*/\n\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\ntype Props = {\n  className?: string\n  category?: string\n  current: number\n  isFirst: boolean\n  isLast: boolean\n}\n\nconst BlogListPagenationComponent: React.FC<Props> = ({ className, category, current, isFirst, isLast }): JSX.Element => {\n  const branches = category ? `/category/${category}/` : `/blog-list/`\n\n  return (\n    <ul className={className}>\n      {!isFirst && (\n        <li className=\"prev\">\n          <Link to={current === 2 ? branches : `${branches}${current - 1}/`} rel=\"prev\" className=\"prev-link\">\n            New\n          </Link>\n        </li>\n      )}\n      {!isLast && (\n        <li className=\"next\">\n          <Link to={`${branches}${current + 1}/`} rel=\"next\" className=\"next-link\">\n            Old\n          </Link>\n        </li>\n      )}\n    </ul>\n  )\n}\n\nconst StyledComponent = styled(BlogListPagenationComponent)`\n  width: 100%;\n  max-width: 500px;\n  display: grid;\n  grid-template-rows: none;\n  grid-template-columns: 50%;\n  padding: 0 20px;\n\n  .prev {\n    grid-row: 1 / 2;\n    grid-column: 1 / 2;\n    text-align: left;\n  }\n\n  .prev-link {\n    font-size: 2em;\n  }\n\n  .next {\n    grid-row: 1 / 2;\n    grid-column: 2 / 3;\n    text-align: right;\n  }\n\n  .next-link {\n    font-size: 2em;\n  }\n`\n\nexport const BlogListPagenation = StyledComponent\n","/*\n  Blog List Link.\n*/\n\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport Img, { FluidObject } from 'gatsby-image'\nimport { BlogListQuery } from 'graphql-types'\n\ntype Props = {\n  className?: string\n  edges: BlogListQuery['allMarkdownRemark']['edges']\n}\n\nconst BlogListLinkComponent: React.FC<Props> = ({ className, edges }): JSX.Element => {\n  const setLink = (): JSX.Element[] => {\n    return edges.map(({ node }) => (\n      <Link className=\"list-link\" to={node?.fields?.slug || ''} key={node?.id}>\n        <dl className=\"post-wrapper\">\n          <dd className=\"post-image-wrapper\">\n            <Img\n              className=\"post-image\"\n              /*\n               TODO:\n               gatsby-image <-> gatsby-plugin-graphql-codeine Too Match Type. gatsby-image/index.d.ts(31, 3)\n               Using gatsby-image/index.d.ts\n              */\n              fluid={node?.frontmatter?.image?.childImageSharp?.fluid as FluidObject | FluidObject[]}\n            />\n          </dd>\n          <dt className=\"post-title\">{node?.frontmatter?.title}</dt>\n        </dl>\n      </Link>\n    ))\n  }\n\n  return <div className={className}>{setLink()}</div>\n}\n\nconst StyledComponent = styled(BlogListLinkComponent)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  .list-link {\n    width: 100%;\n    max-width: 300px;\n    margin: 0 0 20px 0;\n  }\n\n  .post-wrapper {\n    width: 100%;\n  }\n\n  .post-image-wrapper {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .post-image {\n    width: 100%;\n    max-width: 300px;\n    margin: 0 0 20px 0;\n  }\n\n  .post-title {\n    width: 100%;\n    font-size: 3em;\n    text-align: center;\n  }\n`\n\nexport const BlogListLink = StyledComponent\n","/*\n  Blog Category.\n*/\n\nimport React from 'react'\nimport { graphql } from 'gatsby'\nimport { SEO } from '@/components/seo'\nimport { Layout } from '@/components/layout'\nimport { BlogListLink } from '@/components/Presentations/BlogListLink'\nimport { BlogListPagenation } from '@/components/Presentations/BlogListPagenation'\nimport styled from 'styled-components'\nimport { PagesStyle, BreakPoint } from '@/styles/StyleMixins'\nimport { BlogCategoryQuery } from 'graphql-types'\n\ntype Props = {\n  className?: string\n  location: { pathname: string }\n  data: BlogCategoryQuery\n  pageContext: {\n    category: string\n    current: number\n    isFirst: boolean\n    isLast: boolean\n  }\n}\n\nexport const query = graphql`\n  query BlogCategory($ids: [String]!, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(filter: { id: { in: $ids } }, sort: { order: DESC, fields: [frontmatter___date] }, skip: $skip, limit: $limit) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            image {\n              id\n              childImageSharp {\n                fluid(quality: 90, maxWidth: 1000) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst BlogCategoryComponent: React.FC<Props> = ({ className, location, data, pageContext }): JSX.Element => (\n  <Layout>\n    <SEO title=\"Blog Category Page.\" description=\"This is Blog Category Page.\" pagePath={location.pathname} />\n    <div className={className}>\n      <h1 className=\"heading-1\">{`Category ${pageContext.category}'s Posts #${pageContext.current}`}</h1>\n      <BlogListLink edges={data.allMarkdownRemark.edges} />\n      <BlogListPagenation category={pageContext.category} current={pageContext.current} isFirst={pageContext.isFirst} isLast={pageContext.isLast} />\n    </div>\n  </Layout>\n)\n\nexport default styled(BlogCategoryComponent)`\n  ${PagesStyle}\n  padding: 30px 0 20px;\n\n  .heading-1 {\n    font-size: 3em;\n    margin: 0 0 20px 0;\n    ${BreakPoint.largeMobile` font-size: 4em `}\n  }\n`\n"],"sourceRoot":""}