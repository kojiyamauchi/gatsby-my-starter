{"version":3,"sources":["webpack://gatsby-my-starter/./src/components/Presentations/BlogListLink.tsx","webpack://gatsby-my-starter/./src/components/Presentations/BlogListPagenation.tsx","webpack://gatsby-my-starter/./src/templates/blog-category.tsx"],"names":["BlogListLink","styled","className","edges","map","node","image","getImage","frontmatter","Link","to","fields","slug","G","alt","title","id","BlogListPagenation","category","current","isFirst","isLast","branches","rel","location","data","pageContext","description","pagePath","pathname","allMarkdownRemark","PagesStyle","BreakPoint"],"mappings":"mMAuEaA,GArCWC,SApBwB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,MAiB5D,OAAO,gBAAKD,UAAWA,EAAhB,SAfEC,EAAMC,KAAI,YAAe,IAAD,IAAXC,EAAW,EAAXA,KACZC,GAAQC,OAASF,EAAMG,YAAaF,OAC1C,OACE,SAAC,EAAAG,KAAD,CAAMP,UAAU,YAAYQ,IAAIL,SAAA,UAAAA,EAAMM,cAAN,eAAcC,OAAQ,GAAtD,UACE,gBAAIV,UAAU,eAAd,WACE,eAAIA,UAAU,qBAAd,UACE,SAAC,EAAAW,EAAD,CAAaX,UAAU,aAAaY,IAAI,kBAAkBR,MAAOA,OAEnE,eAAIJ,UAAU,aAAd,SAA4BG,SAA5B,UAA4BA,EAAMG,mBAAlC,aAA4B,EAAmBO,YALYV,aAA/D,EAA+DA,EAAMW,YAexD,mFAAGf,CAAH,2X,iGCiCRgB,GA7BWhB,SAvB8B,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,UAAWgB,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,OACxFC,EAAWJ,EAAQ,aAAgBA,EAAhB,kBAEzB,OACE,gBAAIhB,UAAWA,EAAf,WACIkB,IACA,eAAIlB,UAAU,OAAd,UACE,SAAC,EAAAO,KAAD,CAAMC,GAAgB,IAAZS,EAAgBG,EAAhB,GAA8BA,GAAWH,EAAU,GAAnD,IAAyDI,IAAI,OAAOrB,UAAU,YAAxF,oBAKFmB,IACA,eAAInB,UAAU,OAAd,UACE,SAAC,EAAAO,KAAD,CAAMC,GAAE,GAAKY,GAAWH,EAAU,GAA1B,IAAgCI,IAAI,OAAOrB,UAAU,YAA7D,yBASW,0FAAGD,CAAH,qR,2HCsBrB,WAAeA,SAXiC,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWsB,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,YAA9B,OAC9C,UAAC,IAAD,YACE,SAAC,IAAD,CAAKX,MAAM,sBAAsBY,YAAY,8BAA8BC,SAAUJ,EAASK,YAC9F,iBAAK3B,UAAWA,EAAhB,WACE,eAAIA,UAAU,YAAd,qBAAuCwB,EAAYR,SAAnD,aAAwEQ,EAAYP,WACpF,SAAC,IAAD,CAAchB,MAAOsB,EAAKK,kBAAkB3B,SAC5C,SAAC,IAAD,CAAoBe,SAAUQ,EAAYR,SAAUC,QAASO,EAAYP,QAASC,QAASM,EAAYN,QAASC,OAAQK,EAAYL,kBAK1I,iJACIU,KAMEC,iBAPN","file":"component---src-templates-blog-category-tsx-de9dc3e46d8e7cde0daa.js","sourcesContent":["/*\n  Blog List Link.\n*/\n\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { GatsbyImage, getImage, ImageDataLike } from 'gatsby-plugin-image'\nimport { BlogListQuery } from 'graphql-types'\n\ntype Props = {\n  className?: string\n  edges: BlogListQuery['allMarkdownRemark']['edges']\n}\n\nconst BlogListLinkComponent: React.VFC<Props> = ({ className, edges }): JSX.Element => {\n  const setLink = (): JSX.Element[] => {\n    return edges.map(({ node }) => {\n      const image = getImage(node!.frontmatter!.image! as ImageDataLike)\n      return (\n        <Link className=\"list-link\" to={node?.fields?.slug || ''} key={node?.id}>\n          <dl className=\"post-wrapper\">\n            <dd className=\"post-image-wrapper\">\n              <GatsbyImage className=\"post-image\" alt=\"Blog Post Image\" image={image!} />\n            </dd>\n            <dt className=\"post-title\">{node?.frontmatter?.title}</dt>\n          </dl>\n        </Link>\n      )\n    })\n  }\n\n  return <div className={className}>{setLink()}</div>\n}\n\nconst StyledComponent = styled(BlogListLinkComponent)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  .list-link {\n    width: 100%;\n    max-width: 300px;\n    margin: 0 0 20px 0;\n  }\n\n  .post-wrapper {\n    width: 100%;\n  }\n\n  .post-image-wrapper {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .post-image {\n    width: 100%;\n    max-width: 300px;\n    margin: 0 0 20px 0;\n  }\n\n  .post-title {\n    width: 100%;\n    font-size: 3em;\n    text-align: center;\n  }\n`\n\nexport const BlogListLink = StyledComponent\n","/*\n  Blog List Pagenation.\n*/\n\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\ntype Props = {\n  className?: string\n  category?: string\n  current: number\n  isFirst: boolean\n  isLast: boolean\n}\n\nconst BlogListPagenationComponent: React.VFC<Props> = ({ className, category, current, isFirst, isLast }): JSX.Element => {\n  const branches = category ? `/category/${category}/` : `/blog-list/`\n\n  return (\n    <ul className={className}>\n      {!isFirst && (\n        <li className=\"prev\">\n          <Link to={current === 2 ? branches : `${branches}${current - 1}/`} rel=\"prev\" className=\"prev-link\">\n            New\n          </Link>\n        </li>\n      )}\n      {!isLast && (\n        <li className=\"next\">\n          <Link to={`${branches}${current + 1}/`} rel=\"next\" className=\"next-link\">\n            Old\n          </Link>\n        </li>\n      )}\n    </ul>\n  )\n}\n\nconst StyledComponent = styled(BlogListPagenationComponent)`\n  width: 100%;\n  max-width: 500px;\n  display: grid;\n  grid-template-rows: none;\n  grid-template-columns: 50%;\n  padding: 0 20px;\n\n  .prev {\n    grid-row: 1 / 2;\n    grid-column: 1 / 2;\n    text-align: left;\n  }\n\n  .prev-link {\n    font-size: 2em;\n  }\n\n  .next {\n    grid-row: 1 / 2;\n    grid-column: 2 / 3;\n    text-align: right;\n  }\n\n  .next-link {\n    font-size: 2em;\n  }\n`\n\nexport const BlogListPagenation = StyledComponent\n","/*\n  Blog Category.\n*/\n\nimport { graphql } from 'gatsby'\nimport { SEO } from '@/components/seo'\nimport { Layout } from '@/components/layout'\nimport { BlogListLink } from '@/components/Presentations/BlogListLink'\nimport { BlogListPagenation } from '@/components/Presentations/BlogListPagenation'\nimport styled from 'styled-components'\nimport { PagesStyle, BreakPoint } from '@/styles/StyleMixins'\nimport { BlogCategoryQuery } from 'graphql-types'\n\ntype Props = {\n  className?: string\n  location: { pathname: string }\n  data: BlogCategoryQuery\n  pageContext: {\n    category: string\n    current: number\n    isFirst: boolean\n    isLast: boolean\n  }\n}\n\nexport const query = graphql`\n  query BlogCategory($ids: [String]!, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(filter: { id: { in: $ids } }, sort: { order: DESC, fields: [frontmatter___date] }, skip: $skip, limit: $limit) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            image {\n              id\n              childImageSharp {\n                gatsbyImageData(quality: 90, placeholder: BLURRED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst BlogCategoryComponent: React.VFC<Props> = ({ className, location, data, pageContext }): JSX.Element => (\n  <Layout>\n    <SEO title=\"Blog Category Page.\" description=\"This is Blog Category Page.\" pagePath={location.pathname} />\n    <div className={className}>\n      <h1 className=\"heading-1\">{`Category ${pageContext.category}'s Posts #${pageContext.current}`}</h1>\n      <BlogListLink edges={data.allMarkdownRemark.edges} />\n      <BlogListPagenation category={pageContext.category} current={pageContext.current} isFirst={pageContext.isFirst} isLast={pageContext.isLast} />\n    </div>\n  </Layout>\n)\n\nexport default styled(BlogCategoryComponent)`\n  ${PagesStyle}\n  padding: 30px 0 20px;\n\n  .heading-1 {\n    font-size: 3em;\n    margin: 0 0 20px 0;\n    ${BreakPoint.largeMobile` font-size: 4em `}\n  }\n`\n"],"sourceRoot":""}