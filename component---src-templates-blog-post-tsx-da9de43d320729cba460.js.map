{"version":3,"sources":["webpack://gatsby-my-starter/./src/components/Presentations/BlogPostData.tsx","webpack://gatsby-my-starter/./src/components/Presentations/BlogPostPagenation.tsx","webpack://gatsby-my-starter/./src/templates/blog-post.tsx"],"names":["BlogPostData","styled","className","categories","date","map","info","index","Link","to","BlogPostPagenation","previous","next","rel","location","data","pageContext","image","getImage","markdownRemark","frontmatter","title","undefined","description","pagePath","pathname","dangerouslySetInnerHTML","__html","html","G","alt","PagesStyle"],"mappings":"yNAoDaA,GA1BWC,SAbwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,WAAYC,EAA1B,EAA0BA,KAA1B,OAC9C,gBAAIF,UAAcA,EAAL,QAAb,WACE,eAAIA,UAAU,WAAd,SACGC,aADH,EACGA,EAAYE,KAAI,SAACC,EAAMC,GAAP,OACf,UAAC,EAAAC,KAAD,CAAMC,GAAE,aAAeH,EAAf,IAAoCJ,UAAU,gBAAtD,UACGI,EADH,MAAqCC,SAKzC,eAAIL,UAAU,OAAd,SAAsBE,UAIL,mFAAGH,CAAH,kPCmCRS,GA7BWT,SAnB8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWS,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,KAAxB,OACpD,gBAAIV,UAAWA,EAAf,UACGS,IACC,eAAIT,UAAU,OAAd,UACE,SAAC,EAAAM,KAAD,CAAMC,GAAE,GAAKE,EAAYE,IAAI,OAAOX,UAAU,YAA9C,yBAKHU,IACC,eAAIV,UAAU,OAAd,UACE,SAAC,EAAAM,KAAD,CAAMC,GAAE,GAAKG,EAAQC,IAAI,OAAOX,UAAU,YAA1C,+BAQa,0FAAGD,CAAH,oR,oBC+BrB,GAAeA,SAnB6B,SAAC,GAA6D,IAAD,kBAA1DC,EAA0D,EAA1DA,UAAWY,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,YAClEC,GAAQC,OAASH,EAAMI,eAAgBC,YAAaH,OAC1D,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CACEI,OAAON,SAAA,UAAAA,EAAMI,sBAAN,mBAAsBC,mBAAtB,eAAmCC,aAASC,EACnDC,aAAaR,SAAA,UAAAA,EAAMI,sBAAN,mBAAsBC,mBAAtB,eAAmCG,mBAAeD,EAC/DE,SAAUV,EAASW,YAErB,iBAAKvB,UAAWA,EAAhB,WACE,gBAAKA,UAAU,UAAUwB,wBAAyB,CAAEC,QAAQZ,SAAA,UAAAA,EAAMI,sBAAN,eAAsBS,OAAQ,OAC1F,SAAC5B,EAAD,CAAcG,WAAYY,SAAF,UAAEA,EAAMI,sBAAR,iBAAE,EAAsBC,mBAAxB,aAAE,EAAmCjB,WAAYC,KAAMW,SAAF,UAAEA,EAAMI,sBAAR,iBAAE,EAAsBC,mBAAxB,aAAE,EAAmChB,QAClH,SAAC,EAAAyB,EAAD,CAAa3B,UAAU,WAAW4B,IAAI,aAAab,MAAOA,KAC1D,SAACP,EAAD,CAAoBC,SAAUK,EAAYL,SAAUC,KAAMI,EAAYJ,gBAM9E,gQACImB","file":"component---src-templates-blog-post-tsx-da9de43d320729cba460.js","sourcesContent":["/*\n  Blog Post Data.\n*/\n\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\ntype Props = {\n  className?: string\n  categories?: (string | null)[] | null\n  date: string\n}\n\nconst BlogPostDataComponent: React.VFC<Props> = ({ className, categories, date }): JSX.Element => (\n  <ul className={`${className} list`}>\n    <li className=\"category\">\n      {categories?.map((info, index) => (\n        <Link to={`/category/${info}/`} key={index} className=\"category-link\">\n          {info}.\n        </Link>\n      ))}\n    </li>\n    <li className=\"date\">{date}</li>\n  </ul>\n)\n\nconst StyledComponent = styled(BlogPostDataComponent)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 0 20px 0;\n\n  .category {\n    margin: 0 20px 0 0;\n  }\n\n  .category-link {\n    font-size: 2em;\n    display: inline-block;\n    margin: 0 5px 0 0;\n\n    &:last-of-type {\n      margin: 0;\n    }\n  }\n\n  .date {\n    font-size: 2em;\n    margin: 0 0 0 20px 0;\n  }\n`\n\nexport const BlogPostData = StyledComponent\n","/*\n  Blog Post Pagenation.\n*/\n\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\ntype Props = {\n  className?: string\n  previous: string | null\n  next: string | null\n}\n\nconst BlogPostPagenationComponent: React.VFC<Props> = ({ className, previous, next }): JSX.Element => (\n  <ul className={className}>\n    {previous && (\n      <li className=\"prev\">\n        <Link to={`${previous}`} rel=\"prev\" className=\"prev-link\">\n          New Post.\n        </Link>\n      </li>\n    )}\n    {next && (\n      <li className=\"next\">\n        <Link to={`${next}`} rel=\"next\" className=\"next-link\">\n          Old Post.\n        </Link>\n      </li>\n    )}\n  </ul>\n)\n\nconst StyledComponent = styled(BlogPostPagenationComponent)`\n  width: 100%;\n  max-width: 500px;\n  display: grid;\n  grid-template-rows: none;\n  grid-template-columns: 50%;\n  padding: 0 20px;\n\n  .prev {\n    grid-row: 1 / 2;\n    grid-column: 1 / 2;\n    text-align: left;\n  }\n\n  .prev-link {\n    font-size: 2em;\n  }\n\n  .next {\n    grid-row: 1 / 2;\n    grid-column: 2 / 3;\n    text-align: right;\n  }\n\n  .next-link {\n    font-size: 2em;\n  }\n`\n\nexport const BlogPostPagenation = StyledComponent\n","/*\n  Blog Post.\n*/\n\nimport { graphql } from 'gatsby'\nimport { SEO } from '@/components/seo'\nimport { Layout } from '@/components/layout'\nimport { BlogPostData } from '@/components/Presentations/BlogPostData'\nimport { BlogPostPagenation } from '@/components/Presentations/BlogPostPagenation'\nimport { GatsbyImage, getImage, ImageDataLike } from 'gatsby-plugin-image'\nimport styled from 'styled-components'\nimport { PagesStyle } from '@/styles/StyleMixins'\nimport { BlogPostQuery } from 'graphql-types'\n\ntype Props = {\n  className?: string\n  location: { pathname: string }\n  data: BlogPostQuery\n  pageContext: {\n    id: string\n    [key: string]: string | null\n  }\n}\n\nexport const query = graphql`\n  query BlogPost($id: [String]!) {\n    markdownRemark(id: { in: $id }) {\n      html\n      frontmatter {\n        categories\n        date(formatString: \"YYYY/MM/DD\")\n        description\n        title\n        image {\n          id\n          childImageSharp {\n            gatsbyImageData(quality: 90, placeholder: BLURRED)\n          }\n        }\n      }\n    }\n  }\n`\n\nconst BlogPostComponent: React.VFC<Props> = ({ className, location, data, pageContext }): JSX.Element => {\n  const image = getImage(data!.markdownRemark!.frontmatter!.image! as ImageDataLike)\n  return (\n    <Layout>\n      <SEO\n        title={data?.markdownRemark?.frontmatter?.title || undefined}\n        description={data?.markdownRemark?.frontmatter?.description || undefined}\n        pagePath={location.pathname}\n      />\n      <div className={className}>\n        <div className=\"content\" dangerouslySetInnerHTML={{ __html: data?.markdownRemark?.html || '' }} />\n        <BlogPostData categories={data?.markdownRemark?.frontmatter?.categories} date={data?.markdownRemark?.frontmatter?.date} />\n        <GatsbyImage className=\"img-blog\" alt=\"Blog Image\" image={image!} />\n        <BlogPostPagenation previous={pageContext.previous} next={pageContext.next} />\n      </div>\n    </Layout>\n  )\n}\n\nexport default styled(BlogPostComponent)`\n  ${PagesStyle}\n  padding: 30px 0 20px;\n\n  .content {\n    width: 100%;\n    text-align: center;\n\n    h1 {\n      font-size: 4em;\n      margin: 0 0 20px 0;\n    }\n\n    p {\n      font-size: 3em;\n      margin: 0 0 20px 0;\n    }\n  }\n\n  .img-blog {\n    width: 100%;\n    max-width: 450px;\n    margin: 0 0 20px 0;\n  }\n`\n"],"sourceRoot":""}